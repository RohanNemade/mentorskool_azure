{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mentorskool-capstone"
		},
		"CosmosDb_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb_ls'"
		},
		"SQLDb_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDb_ls'"
		},
		"adlscapstone_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlscapstone'"
		},
		"adlscapstone_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlscapstone.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb_ls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDb_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLDb_ls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlscapstone')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlscapstone_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlscapstone_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_bronze_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adls_bronze_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cars.csv",
						"fileSystem": "bronze-raw-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "car_id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "km_driven",
						"type": "String"
					},
					{
						"name": "fuel",
						"type": "String"
					},
					{
						"name": "transmission",
						"type": "String"
					},
					{
						"name": "mileage",
						"type": "String"
					},
					{
						"name": "engine",
						"type": "String"
					},
					{
						"name": "max_power",
						"type": "String"
					},
					{
						"name": "torque",
						"type": "String"
					},
					{
						"name": "seats",
						"type": "String"
					},
					{
						"name": "model",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDb_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "car_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "km_driven",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fuel",
						"type": "varchar"
					},
					{
						"name": "transmission",
						"type": "varchar"
					},
					{
						"name": "mileage",
						"type": "varchar"
					},
					{
						"name": "engine",
						"type": "varchar"
					},
					{
						"name": "max_power",
						"type": "varchar"
					},
					{
						"name": "torque",
						"type": "varchar"
					},
					{
						"name": "seats",
						"type": "int",
						"precision": 10
					},
					{
						"name": "model",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/claims_bronze_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adls_bronze_datasets"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "claims.json",
						"fileSystem": "bronze-raw-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ClaimID": {
							"type": "integer"
						},
						"incident_state": {
							"type": "string"
						},
						"incident_city": {
							"type": "string"
						},
						"incident_location": {
							"type": "string"
						},
						"injury": {
							"type": "number"
						},
						"property": {
							"type": "number"
						},
						"vehicle": {
							"type": "number"
						},
						"incident_date": {
							"type": "string"
						},
						"incident_type": {
							"type": "string"
						},
						"collision_type": {
							"type": "string"
						},
						"incident_severity": {
							"type": "string"
						},
						"authorities_contacted": {
							"type": "string"
						},
						"number_of_vehicles_involved": {
							"type": "integer"
						},
						"bodily_injuries": {
							"type": "integer"
						},
						"witnesses": {
							"type": "integer"
						},
						"police_report_available": {
							"type": "string"
						},
						"Claim_Rejected": {
							"type": "string"
						},
						"Claim_Logged_On": {
							"type": "string"
						},
						"Claim_Processed_On": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/claims_cosmos_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cosmos_datasets"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "claims-container"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customers_bronze_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adls_bronze_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers.csv",
						"fileSystem": "bronze-raw-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "seller_type",
						"type": "String"
					},
					{
						"name": "owner",
						"type": "String"
					},
					{
						"name": "Job",
						"type": "String"
					},
					{
						"name": "Marital",
						"type": "String"
					},
					{
						"name": "Education",
						"type": "String"
					},
					{
						"name": "Default",
						"type": "String"
					},
					{
						"name": "Balance",
						"type": "String"
					},
					{
						"name": "HHInsurance",
						"type": "String"
					},
					{
						"name": "CarLoan",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customers_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDb_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "region",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "seller_type",
						"type": "varchar"
					},
					{
						"name": "owner",
						"type": "varchar"
					},
					{
						"name": "job",
						"type": "varchar"
					},
					{
						"name": "marital",
						"type": "varchar"
					},
					{
						"name": "education",
						"type": "varchar"
					},
					{
						"name": "default_",
						"type": "int",
						"precision": 10
					},
					{
						"name": "balance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hhinsurance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "carloan",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/policy_bronze_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adls_bronze_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "policy.csv",
						"fileSystem": "bronze-raw-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policy_number",
						"type": "String"
					},
					{
						"name": "policy_bind_date",
						"type": "String"
					},
					{
						"name": "policy_state",
						"type": "String"
					},
					{
						"name": "policy_csl",
						"type": "String"
					},
					{
						"name": "policy_deductable",
						"type": "String"
					},
					{
						"name": "policy_annual_premium",
						"type": "String"
					},
					{
						"name": "umbrella_limit",
						"type": "String"
					},
					{
						"name": "car_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/policy_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDb_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "policy_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "policy_bind_date",
						"type": "date"
					},
					{
						"name": "policy_state",
						"type": "varchar"
					},
					{
						"name": "policy_csl",
						"type": "varchar"
					},
					{
						"name": "policy_deductable",
						"type": "int",
						"precision": 10
					},
					{
						"name": "policy_annual_premium",
						"type": "float",
						"precision": 15
					},
					{
						"name": "umbrella_limit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "car_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "policy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_bronze_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adls_bronze_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales.csv",
						"fileSystem": "bronze-raw-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sales_id",
						"type": "String"
					},
					{
						"name": "ad_placed_on",
						"type": "String"
					},
					{
						"name": "sold_on",
						"type": "String"
					},
					{
						"name": "selling_price",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "seller_type",
						"type": "String"
					},
					{
						"name": "owner",
						"type": "String"
					},
					{
						"name": "sold",
						"type": "String"
					},
					{
						"name": "car_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_fact_adls_gold_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlscapstone",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "gold-fact-table-staging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "incident_state",
						"type": "String"
					},
					{
						"name": "count_of_claims",
						"type": "String"
					},
					{
						"name": "avg_loss_incurred",
						"type": "String"
					},
					{
						"name": "claim_rejection_percentage",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlscapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDb_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql_datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sales_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ad_placed_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sold_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "selling_price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "region",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "seller_type",
						"type": "varchar"
					},
					{
						"name": "owner",
						"type": "varchar"
					},
					{
						"name": "sold",
						"type": "varchar"
					},
					{
						"name": "car_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_copy_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cars_copy_pipe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "car_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "car_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "km_driven",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "km_driven",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "fuel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fuel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "transmission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "transmission",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mileage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "engine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "engine",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "max_power",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "max_power",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "torque",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "torque",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "seats",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seats",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "model",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cars_bronze_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cars_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "sql_db_copy_pipes"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cars_bronze_ds')]",
				"[concat(variables('factoryId'), '/datasets/cars_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/claims_copy_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "claims_copy_pipe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "claims_bronze_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "claims_cosmos_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "cosmos_db_copy_pipes"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/claims_bronze_ds')]",
				"[concat(variables('factoryId'), '/datasets/claims_cosmos_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customers_copy_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customers_copy_pipe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "seller_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seller_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "owner",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "owner",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Job",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "job",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Marital",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "marital",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Education",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "education",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "default_",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "balance",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HHInsurance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hhinsurance",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CarLoan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "carloan",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "customers_bronze_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customers_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "sql_db_copy_pipes"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/customers_bronze_ds')]",
				"[concat(variables('factoryId'), '/datasets/customers_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/policy_copy_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "policy_copy_pipe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "policy_number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_number",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "policy_bind_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_bind_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "policy_state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "policy_csl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_csl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "policy_deductable",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_deductable",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "policy_annual_premium",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "policy_annual_premium",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "umbrella_limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "umbrella_limit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "car_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "car_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "policy_bronze_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "policy_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "sql_db_copy_pipes"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/policy_bronze_ds')]",
				"[concat(variables('factoryId'), '/datasets/policy_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_copy_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sales_copy_pipe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sales_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ad_placed_on",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ad_placed_on",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "sold_on",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sold_on",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "selling_price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "selling_price",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "seller_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seller_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "owner",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "owner",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "car_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "car_id",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sales_bronze_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sales_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "sql_db_copy_pipes"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_bronze_ds')]",
				"[concat(variables('factoryId'), '/datasets/sales_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_fact')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cars_sql_ds",
								"type": "DatasetReference"
							},
							"name": "carsSource"
						},
						{
							"dataset": {
								"referenceName": "sales_sql_ds",
								"type": "DatasetReference"
							},
							"name": "salesSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sales_fact_adls_gold_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "carsSelect"
						},
						{
							"name": "salesSelect"
						},
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "timediffCol"
						}
					],
					"scriptLines": [
						"source(output(",
						"          car_id as integer,",
						"          name as string,",
						"          km_driven as integer,",
						"          fuel as string,",
						"          transmission as string,",
						"          mileage as string,",
						"          engine as string,",
						"          max_power as string,",
						"          torque as string,",
						"          seats as integer,",
						"          model as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> carsSource",
						"source(output(",
						"          sales_id as integer,",
						"          ad_placed_on as timestamp,",
						"          sold_on as timestamp,",
						"          selling_price as integer,",
						"          region as string,",
						"          state as string,",
						"          city as string,",
						"          seller_type as string,",
						"          owner as string,",
						"          sold as string,",
						"          car_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> salesSource",
						"carsSource select(mapColumn(",
						"          car_id,",
						"          model",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> carsSelect",
						"salesSource select(mapColumn(",
						"          sales_id,",
						"          ad_placed_on,",
						"          sold_on,",
						"          selling_price,",
						"          sold,",
						"          car_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> salesSelect",
						"salesSelect, carsSelect join(salesSelect@car_id == carsSelect@car_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          ad_placed_on,",
						"          sold_on,",
						"          selling_price,",
						"          sold,",
						"          car_id = salesSelect@car_id,",
						"          model",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"timediffCol aggregate(groupBy(model),",
						"     number_of_cars_listed = count(car_id),",
						"          numver_of_cars_sold = count(sold_on),",
						"          net_revenue = sum(selling_price),",
						"          avg_selling_time_after_ad = avg(selling_time_after_add)) ~> aggregate1",
						"select1 derive(selling_time_after_add = (sold_on - ad_placed_on)/3600000) ~> timediffCol",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          incident_state as string,",
						"          count_of_claims as string,",
						"          avg_loss_incurred as string,",
						"          claim_rejection_percentage as string",
						"     ),",
						"     partitionFileNames:['sales_fact.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cars_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/sales_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/sales_fact_adls_gold_ds')]"
			]
		}
	]
}